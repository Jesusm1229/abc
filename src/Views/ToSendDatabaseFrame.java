/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Controllers.Administracion_json;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Jesus Gonzalez
 */
public class ToSendDatabaseFrame extends javax.swing.JDialog {

    private int id_postulante, option;
    Connection connection;
    Formulario_Postulante_Conocimientos fpc;   
    
    /**
     * Creates new form NewToSendDatabaseFrame
     */
    public ToSendDatabaseFrame(Formulario_Postulante_Conocimientos fpc, int id_postulante, int option, Connection connection) {
        initComponents();
        setModal(true);
        setBackground(new Color(1.0f,1.0f,1.0f,0.5f)); 
        setLocationRelativeTo(null);
        
                
        cargarAnos();
        ocultarExperienciaLaboral();
        generarLabelFuncion(option);
        
        this.fpc = fpc;        
        this.id_postulante = id_postulante;   
        this.option = option;
        this.connection = connection; 
        
        
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelIngreso = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanelEmpresa = new javax.swing.JPanel();
        jPanelCargo = new javax.swing.JPanel();
        cargo_box = new javax.swing.JComboBox<>();
        jPanelDuracion = new javax.swing.JPanel();
        jPanelDesde = new javax.swing.JPanel();
        anoingreso_box = new javax.swing.JComboBox<>();
        jPanelHasta = new javax.swing.JPanel();
        anosalida_box = new javax.swing.JComboBox<>();
        guardar_button = new javax.swing.JButton();
        cancelar_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 700));
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 700));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(380, 370));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelIngreso.setOpaque(false);

        jTextField1.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 153, 240));
        jTextField1.setBorder(null);
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout jPanelIngresoLayout = new javax.swing.GroupLayout(jPanelIngreso);
        jPanelIngreso.setLayout(jPanelIngresoLayout);
        jPanelIngresoLayout.setHorizontalGroup(
            jPanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
            .addGroup(jPanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
        );
        jPanelIngresoLayout.setVerticalGroup(
            jPanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
            .addGroup(jPanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelIngresoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel1.add(jPanelIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 320, 80));

        jPanelEmpresa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EMPRESA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB", 0, 18), new java.awt.Color(0, 153, 240))); // NOI18N
        jPanelEmpresa.setEnabled(false);
        jPanelEmpresa.setOpaque(false);

        jPanelCargo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "cargo", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Berlin Sans FB", 0, 18), new java.awt.Color(0, 102, 102))); // NOI18N
        jPanelCargo.setEnabled(false);
        jPanelCargo.setOpaque(false);

        cargo_box.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        cargo_box.setForeground(new java.awt.Color(0, 153, 240));
        cargo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frontend", "Backend", "Dewps", "Q/A", "UIX", "Full-Stack" }));
        cargo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cargo_box.setEnabled(false);
        cargo_box.setOpaque(false);

        javax.swing.GroupLayout jPanelCargoLayout = new javax.swing.GroupLayout(jPanelCargo);
        jPanelCargo.setLayout(jPanelCargoLayout);
        jPanelCargoLayout.setHorizontalGroup(
            jPanelCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCargoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cargo_box, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelCargoLayout.setVerticalGroup(
            jPanelCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCargoLayout.createSequentialGroup()
                .addComponent(cargo_box, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelDuracion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "duraci√≥n", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Berlin Sans FB", 0, 18), new java.awt.Color(0, 102, 102))); // NOI18N
        jPanelDuracion.setEnabled(false);
        jPanelDuracion.setOpaque(false);
        jPanelDuracion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelDesde.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ingreso", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Berlin Sans FB", 0, 18), new java.awt.Color(0, 153, 240))); // NOI18N
        jPanelDesde.setEnabled(false);
        jPanelDesde.setOpaque(false);

        anoingreso_box.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        anoingreso_box.setForeground(new java.awt.Color(0, 153, 240));
        anoingreso_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        anoingreso_box.setEnabled(false);

        javax.swing.GroupLayout jPanelDesdeLayout = new javax.swing.GroupLayout(jPanelDesde);
        jPanelDesde.setLayout(jPanelDesdeLayout);
        jPanelDesdeLayout.setHorizontalGroup(
            jPanelDesdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDesdeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(anoingreso_box, 0, 80, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDesdeLayout.setVerticalGroup(
            jPanelDesdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDesdeLayout.createSequentialGroup()
                .addComponent(anoingreso_box)
                .addContainerGap())
        );

        jPanelDuracion.add(jPanelDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 70));

        jPanelHasta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "salida", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Berlin Sans FB", 0, 18), new java.awt.Color(0, 153, 240))); // NOI18N
        jPanelHasta.setEnabled(false);
        jPanelHasta.setOpaque(false);

        anosalida_box.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        anosalida_box.setForeground(new java.awt.Color(0, 153, 240));
        anosalida_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        anosalida_box.setEnabled(false);

        javax.swing.GroupLayout jPanelHastaLayout = new javax.swing.GroupLayout(jPanelHasta);
        jPanelHasta.setLayout(jPanelHastaLayout);
        jPanelHastaLayout.setHorizontalGroup(
            jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHastaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(anosalida_box, 0, 80, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelHastaLayout.setVerticalGroup(
            jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHastaLayout.createSequentialGroup()
                .addComponent(anosalida_box)
                .addContainerGap())
        );

        jPanelDuracion.add(jPanelHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, 70));

        javax.swing.GroupLayout jPanelEmpresaLayout = new javax.swing.GroupLayout(jPanelEmpresa);
        jPanelEmpresa.setLayout(jPanelEmpresaLayout);
        jPanelEmpresaLayout.setHorizontalGroup(
            jPanelEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpresaLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelDuracion, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(jPanelCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanelEmpresaLayout.setVerticalGroup(
            jPanelEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmpresaLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanelCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanelEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 320, 220));

        guardar_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_checkmark_80px.png"))); // NOI18N
        guardar_button.setBorderPainted(false);
        guardar_button.setContentAreaFilled(false);
        guardar_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar_button.setPreferredSize(new java.awt.Dimension(80, 80));
        guardar_button.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_checkmark_80px_1.png"))); // NOI18N
        guardar_button.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_checkmark_80px_1.png"))); // NOI18N
        guardar_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_checkmark_80px_1.png"))); // NOI18N
        guardar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(guardar_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, 60, 60));

        cancelar_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_cancel_2_80px_1.png"))); // NOI18N
        cancelar_button.setBorderPainted(false);
        cancelar_button.setContentAreaFilled(false);
        cancelar_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelar_button.setMaximumSize(new java.awt.Dimension(80, 80));
        cancelar_button.setMinimumSize(new java.awt.Dimension(80, 80));
        cancelar_button.setPreferredSize(new java.awt.Dimension(80, 80));
        cancelar_button.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_cancel_2_80px.png"))); // NOI18N
        cancelar_button.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_cancel_2_80px.png"))); // NOI18N
        cancelar_button.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_cancel_2_80px.png"))); // NOI18N
        cancelar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelar_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 60, 60));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BACKGROUND.png"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setMaximumSize(new java.awt.Dimension(380, 390));
        jLabel1.setMinimumSize(new java.awt.Dimension(380, 390));
        jLabel1.setPreferredSize(new java.awt.Dimension(380, 390));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 390));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(310, 310, 310))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    
    private void guardar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_buttonActionPerformed
        Dialogs d;
        if(jTextField1.getText().equals("")){
            d = new Dialogs(6);//Complete los campos
            d.setVisible(true);           
            return;
        }
        
        if(jTextField1.getText().equals("") && option != 3){
                    selectOptionDatabase(option);
                    switch(option)
                    {
                        case 0:
                            fpc.addCertificacion(jTextField1.getText());
                            break;
                        case 1:
                            fpc.addHerramienta(jTextField1.getText());
                            break;
                        case 2:
                            fpc.addCGeneral(jTextField1.getText());
                            break;
                        case 3:
                            fpc.addExpLaboral(jTextField1.getText());
                            break;
                        case 4:
                            fpc.addLenguaje(jTextField1.getText());
                            break;           

                        default: break;
                    }        
                    d = new Dialogs(19);//Agregado Correctamente
                    d.setVisible(true);                    
                    dispose();
                    return;
        }
        
        // Verificamos que el ano de ingreso sea menor o igual al de salida.
        if(Integer.parseInt(anoingreso_box.getItemAt(anoingreso_box.getSelectedIndex())) > Integer.parseInt(anosalida_box.getItemAt(anosalida_box.getSelectedIndex()))){
            d = new Dialogs(8);//Inconsistencia rango de edad
            d.setVisible(true);
            return;
        }
        
        selectOptionDatabase(option);
        switch(option)
        {
            case 0:
                fpc.addCertificacion(jTextField1.getText());
                break;
            case 1:
                fpc.addHerramienta(jTextField1.getText());
                break;
            case 2:
                fpc.addCGeneral(jTextField1.getText());
                break;
            case 3:
                fpc.addExpLaboral(jTextField1.getText());
                break;
            case 4:
                fpc.addLenguaje(jTextField1.getText());
                break;           
               
            default: break;
        }        
        d = new Dialogs(19);//Agregado Correctamente
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_guardar_buttonActionPerformed

    private void cancelar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_buttonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelar_buttonActionPerformed

    
        public void generarLabelFuncion(int option){
    
        Font font = new Font("Berlin Sans FB", Font.PLAIN, 18);
        
        switch(option){
            case 0: jTextField1.setBorder(new TitledBorder(new LineBorder(new Color(0, 153, 240)), "ingrese certificaci√≥n:", TitledBorder.LEADING,
            TitledBorder.TOP, font , new Color(0, 102, 102 ))); 
                    break;
            case 1: jTextField1.setBorder(new TitledBorder(new LineBorder(new Color(0, 153, 240)), "ingrese herramienta:", TitledBorder.LEADING,
            TitledBorder.TOP, font , new Color(0, 102, 102 ))); 
                    break;
            case 2: jTextField1.setBorder(new TitledBorder(new LineBorder(new Color(0, 153, 240)), "ingrese conoc. general:", TitledBorder.LEADING,
            TitledBorder.TOP, font , new Color(0, 102, 102 ))); 
                    break;
            case 3: jTextField1.setBorder(new TitledBorder(new LineBorder(new Color(0, 153, 240)), "ingrese empresa (exp.):", TitledBorder.LEADING,
            TitledBorder.TOP, font , new Color(0, 102, 102 )));
                    enabledEmpresa();
                    jPanelEmpresa.setVisible(true);
                    break;
            case 4: jTextField1.setBorder(new TitledBorder(new LineBorder(new Color(0, 153, 240)), "ingrese lenguaje:", TitledBorder.LEADING,
            TitledBorder.TOP, font , new Color(0, 102, 102 ))); 
                    break;
        }
    }    
    
    public void enabledEmpresa(){
        jPanelEmpresa.setEnabled(true);
        jPanelCargo.setEnabled(true);
            cargo_box.setEnabled(true);
        jPanelDuracion.setEnabled(true);
        jPanelDesde.setEnabled(true);
            anoingreso_box.setEnabled(true);
        jPanelHasta.setEnabled(true);
            anosalida_box.setEnabled(true);
    }
        
    // Metodo para ocultar la experiencia laboral de la interfaz.
    public void ocultarExperienciaLaboral(){
        jPanelEmpresa.setVisible(false);
        
    }
    
    // Metodo para cargar los anos en los boxes de la interfaz. (Para los anos de ingreso y salida de la experiencia laboral).
    private void cargarAnos() {
		
	for(int counter = 1980; counter <= 2020; counter++){
	    anoingreso_box.addItem(String.valueOf(counter));
            anosalida_box.addItem(String.valueOf(counter));
        }
    }
    
    // Seleccionando la opcion dependiendo del conocimiento que el postulante desea ingresar.
    public void selectOptionDatabase(int option){
    
        switch(option){
            case 0: agregarCertificacionesDatabase();
                    break;
            case 1: agregarHerramientasManejadasDatabase();
                    break;
            case 2: agregarConocimientosGeneralesDatabase();
                    break;
            case 3: agregarExperienciasLaboralesDatabase();
                    break;
            case 4: agregarLenguajesManejadosDatabase();
                    break;
        }
    }
    
    // Almacenar en la base de datos las certificaciones del postulante.
    public void agregarCertificacionesDatabase(){
        
            try {
                PreparedStatement ps = connection.prepareStatement("INSERT INTO `certificaciones` (`idcertificacion`, `certificacion`, `idpostulante`) VALUES (NULL, ?, ?)");
                
                ps.setString(1, jTextField1.getText());
                ps.setInt(2, id_postulante);
                ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Administracion_json.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    // Almacenar en la base de datos las herramientas manejadas del postulante.
    public void agregarHerramientasManejadasDatabase(){
    
            try {
                PreparedStatement ps = connection.prepareStatement("INSERT INTO `herramientas_manejadas` (`idherramientas`, `herramienta`, `idpostulante`) VALUES (NULL, ?, ?)");
                
                ps.setString(1, jTextField1.getText());
                ps.setInt(2, id_postulante);
                ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Administracion_json.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    // Almacenar en la base de datos los conocimientos generales del postulante.
    public void agregarConocimientosGeneralesDatabase(){
    
            try {
                PreparedStatement ps = connection.prepareStatement("INSERT INTO `conocimientos_generales` (`idconocimientos`, `conocimiento_general`, `idpostulante`) VALUES (NULL, ?, ?)");
                
                ps.setString(1, jTextField1.getText());
                ps.setInt(2, id_postulante);
                ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Administracion_json.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    // Almacenar en la base de datos las experiencias laborales del postulante.
    public void agregarExperienciasLaboralesDatabase(){
                   
            try {
                PreparedStatement ps = connection.prepareStatement("INSERT INTO `experiencia_laboral` (`idexperiencia_laboral`, `empresa`, `cargo`, `ano_ingreso`, `ano_salida`, `idpostulante`) VALUES (NULL, ?, ?, ?, ?, ?)");
                
                ps.setString(1, jTextField1.getText());
                ps.setString(2, cargo_box.getItemAt(cargo_box.getSelectedIndex()));
                ps.setInt(3, Integer.parseInt(anoingreso_box.getItemAt(anoingreso_box.getSelectedIndex())));
                ps.setInt(4, Integer.parseInt(anosalida_box.getItemAt(anosalida_box.getSelectedIndex())));
                ps.setInt(5, id_postulante);
                ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Administracion_json.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
     // Almacenar en la base de datos las experiencias laborales del postulante.
    public void agregarLenguajesManejadosDatabase(){
    
            try {
                PreparedStatement ps = connection.prepareStatement("INSERT INTO `lenguajes` (`idlenguaje`, `nombrelenguaje`, `idpostulante`) VALUES (NULL, ?, ?)");
                
                ps.setString(1, jTextField1.getText());
                ps.setInt(2, id_postulante);
                ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Administracion_json.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> anoingreso_box;
    private javax.swing.JComboBox<String> anosalida_box;
    private javax.swing.JButton cancelar_button;
    private javax.swing.JComboBox<String> cargo_box;
    private javax.swing.JButton guardar_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCargo;
    private javax.swing.JPanel jPanelDesde;
    private javax.swing.JPanel jPanelDuracion;
    private javax.swing.JPanel jPanelEmpresa;
    private javax.swing.JPanel jPanelHasta;
    private javax.swing.JPanel jPanelIngreso;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
